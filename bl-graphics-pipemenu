#!/bin/bash
# ---------------------------------------------------------------------
# An Openbox pipemenu for Graphics applications.
#
# Originally written for CrunchBang Linux <http://crunchbang.org/>
# by Philip Newborough (aka corenominal) <mail@philipnewborough.co.uk>
#
# Modified by damo for BunsenLabs Linux
# ---------------------------------------------------------------------

BL_COMMON_LIBDIR='/usr/lib/bunsen/bunsen-common'

# In order to add another APP, add the package name to this array:
TOOLS=('blender' 'gimp' 'inkscape' 'mirage' 'mandelbulber' 'viewnior')
SCROTS=('xfce4-screenshooter' 'scrot')

# Get $USER images directory
#if test -f "/usr/bin/xdg-user-dir";then

if type xdg-user-dir &>/dev/null; then
	IMGDIR=$(xdg-user-dir PICTURES)
else
	IMGDIR="~/Pictures"
fi

# If the package needs additional configuration before installation
# create a function called setupappName, it will be called automatically.


if ! . "$BL_COMMON_LIBDIR/bl-include.cfg" 2> /dev/null; then
	echo $"Error: Failed to locate bl-include.cfg in $BL_COMMON_LIBDIR" >&2
	exit 1
fi

appExists() {
	for curTool in "${TOOLS[@]}"; do # if $packageName exists in tools array
		[[ $curTool = "$1" ]] &&
			return 0
	done
	say "Unable to install $1. There is no such application that I know of." 1 >&2
	say "You can try one of these: ${TOOLS[*]}" 2 >&2
	return 1
}

screenshooterExists() {
	for curScrot in "${SCROTS[@]}"; do # if $packageName exists in scrots array
		[[ $curScrot = "$1" ]] &&
			return 0
	done
	say "Unable to install $1. There is no such application that I know of." 1 >&2
	say "You can try one of these: ${SCROTS[*]}" 2 >&2
	return 1
}

writeScrot() {					# Write scrot submenu items
	IMG="$IMGDIR/%F-%H-%M_scrot.png"
	VIEW="'mirage $IMG'"
	menuSubmenu 'scrot' 'scrot Screenshooter'
		menuItem "scrot Now" "scrot $IMG -e $VIEW"
		menuItem "scrot In 5 secs..." "scrot -d 5 $IMG -e $VIEW"
		menuItem "scrot In 10 secs" "scrot -d 10 $IMG -e $VIEW"
		menuItem "scrot Select Area.." "scrot -s $IMG -e $VIEW"
		menuItem "scrot Current Focus.." "scrot -u $IMG -e $VIEW"
		menuItem "scrot multi-monitor" "scrot -m $IMG -e $VIEW"
	menuSubmenuEnd
}

if [[ $1 && ! $1 = --install-* ]]; then
	packageName=${1#--}
	read -ra words <<< "${packageName//-/ }"
	x-terminal-emulator --title "Install ${words[*]^}" -e "$0" "--install-$packageName"

elif [[ $1 = --install-* ]]; then
	packageName=${1#--install-}
	if [[ $1 = --install-scrot ]] || [[ $1 = --install-xfce4-screenshooter ]];then
		screenshooterExists "$packageName" || exit 1
	else
		appExists "$packageName" || exit 1
	fi
	appName=${packageName//-/ }
	read -ra words <<< "$appName"
	appName=${words[*]^}
	appNameUpper=${appName^^}

	setupFunctionName="setup${appName//[^a-zA-Z]/}" # setupFunctionName should now be in format like 'setupBlender'
	if [[ $(type -t "$setupFunctionName") = 'function' ]]; then
		promptInstall --setup "$setupFunctionName" "${appNameUpper% APP} APP" "$appName" "$packageName"
	else
		promptInstall "${appNameUpper% APP} APP" "$appName" "$packageName"
	fi

else # pipemenu
	menuStart
	for curTool in "${TOOLS[@]}"; do
		read -ra words <<< "${curTool//-/ }"
		curToolName=${words[*]^}
		if type "$curTool" &> /dev/null; then
			menuItem "$curToolName" "$curTool"
		else
			menuItem "Install $curToolName" "$0 --$curTool"
		fi
	done
	menuSeparator 'Screenshots'

	for curScrot in "${SCROTS[@]}"; do
		read -ra words <<< "${curScrot//-/ }"
		curScrotName=${words[*]^}
		if type "$curScrot" &> /dev/null; then
			if [[ "$curScrot" = scrot ]];then
				writeScrot
			else
				menuItem "$curScrotName" "$curScrot"
			fi
		else
			menuItem "Install $curScrotName" "$0 --$curScrot"
		fi
	done
	menuEnd
fi
exit 0
