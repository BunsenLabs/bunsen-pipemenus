#!/bin/bash
# ---------------------------------------------------------------------
# An Openbox pipemenu for Graphics applications.
#
# Originally written for CrunchBang Linux <http://crunchbang.org/>
# by Philip Newborough (aka corenominal) <mail@philipnewborough.co.uk>
#
# Modified by damo <damo@bunsenlabs.org> for BunsenLabs Linux   April 2015
#
#   To change the entries shown in the Graphics pipemenu:
#   edit ".config/openbox/pipemenus.rc"
#
# ---------------------------------------------------------------------

BL_COMMON_LIBDIR='/usr/lib/bunsen/bunsen-common'
USR_CFG_DIR="$HOME/.config/openbox"

# Get $USER images directory
if type xdg-user-dir &>/dev/null; then
    IMGDIR=$(xdg-user-dir PICTURES)
else
    IMGDIR="~/Pictures"
fi
# test for screenshots dir, create if it doesn't exist
SCROTSDIR="$IMGDIR/screenshots"
mkdir -p "$SCROTSDIR"

# If the package needs additional configuration before installation
# create a function called setupappName, it will be called automatically.

if ! . "$BL_COMMON_LIBDIR/bl-include.cfg" 2> /dev/null; then
    echo $"Error: Failed to locate bl-include.cfg in $BL_COMMON_LIBDIR" >&2
    exit 1
elif ! . "$USR_CFG_DIR/pipemenus.rc" 2> /dev/null; then
    echo $"Error: Failed to locate pipemenus.rc in $USR_CFG_DIR" >&2
    exit 1
fi

declare -A AppName AppStatus # AppName: split on hyphens, first letter uppercase
for curApp in "${GRAPHICS_APPS[@]}" "${GRAPHICS_SCROTS[@]}"; do
    words=(${curApp//-/ })
    AppName[$curApp]="${words[*]^}"
    type "$curApp" >/dev/null 2>&1 && AppStatus[$curApp]=installed
done

appExists() {
    for curApp in "${GRAPHICS_APPS[@]}"; do # if $packageName exists in GRAPHICS_APPS array
        [[ $curApp = "$1" ]] &&
            return 0
    done
    say "Unable to install $1. There is no such application that I know of." 1 >&2
    say "You can try one of these: ${GRAPHICS_APPS[*]}" 2 >&2
    return 1
}

screenshooterExists() {
    for curScrot in "${GRAPHICS_SCROTS[@]}"; do # if $packageName exists in GRAPHICS_SCROTS array
        [[ $curScrot = "$1" ]] &&
            return 0
    done
    say "Unable to install $1. There is no such application that I know of." 1 >&2
    say "You can try one of these: ${GRAPHICS_SCROTS[*]}" 2 >&2
    return 1
}

writeScrot() {                  # Write scrot submenu items
    IMG="$SCROTSDIR/%F-%H-%M-%S_scrot.png"
    VIEW="'bl-image-viewer $IMG'"
    menuSubmenu 'scrot' 'scrot Screenshooter'
        menuItem "scrot Now" "scrot $IMG -e $VIEW"
        menuItem "scrot In 5 secs..." "scrot -d 5 $IMG -e $VIEW"
        menuItem "scrot In 10 secs..." "scrot -d 10 $IMG -e $VIEW"
        menuItem "scrot Select Area" "scrot -s $IMG -e $VIEW"
        menuItem "scrot Current Focus" "scrot -u $IMG -e $VIEW"
        menuItem "scrot Multi-Monitor" "scrot -m $IMG -e $VIEW"
    menuSubmenuEnd
}

if [[ $1 = --install ]]; then
    packageName=$2
    appName=${AppName[$packageName]}
    if [[ $packageName = scrot || $packageName = xfce4-screenshooter ]];then
        screenshooterExists "$packageName" || exit 1
    else
        appExists "$packageName" || exit 1
    fi

    terminalCheck -T "Install $appName" "$@"

    desc="This script will install $appName."
    setupFunctionName="setup${appName//[^a-zA-Z]/}" # setupFunctionName should now be in format like 'setupBlender'
    if [[ $(type -t "$setupFunctionName") = 'function' ]]; then
        promptInstall --setup "$setupFunctionName" "$appName" "$desc" "$packageName"
    else
        promptInstall "$appName" "$desc" "$packageName"
    fi

elif [[ $1 ]]; then
    echo "$0: no such option $*" >&2
    exit 1

else # pipemenu
    menuStart

    for curApp in "${GRAPHICS_APPS[@]}"; do
        if [[ ${AppStatus[$curApp]} = installed ]]; then
            menuItem "${AppName[$curApp]}" "$curApp"
        fi
    done
    menu_started=false
    for curApp in "${GRAPHICS_APPS[@]}"; do
        if ! [[ ${AppStatus[$curApp]} = installed ]]; then
            $menu_started || menuSubmenu "graph-apps-install-submenu" "Install"
            menu_started=true
            menuItem "Install ${AppName[$curApp]}" "$0 --install $curApp"
        fi
    done
    $menu_started && menuSubmenuEnd

    menuSeparator 'Screenshots'

    for curScrot in "${GRAPHICS_SCROTS[@]}"; do
        if [[ ${AppStatus[$curScrot]} = installed ]]; then
            if [[ "$curScrot" = scrot ]];then
                writeScrot
            else
                menuItem "${AppName[$curScrot]}" "$curScrot"
            fi
        fi
    done
    menu_started=false
    for curScrot in "${GRAPHICS_SCROTS[@]}"; do
        if ! [[ ${AppStatus[$curScrot]} = installed ]]; then
            $menu_started || menuSubmenu "graph-scrots-install-submenu" "Install"
            menu_started=true
            menuItem "Install ${AppName[$curScrot]}" "$0 --install $curScrot"
        fi
    done
    $menu_started && menuSubmenuEnd
    menuEnd
fi
exit 0
