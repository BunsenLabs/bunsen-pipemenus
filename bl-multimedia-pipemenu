#!/bin/bash
# ---------------------------------------------------------------------
# An Openbox pipemenu for Multimedia applications.
#
# Adapted from the Openbox Graphics pipemenu written for CrunchBang Linux
# <http://crunchbang.org/> by Philip Newborough (aka corenominal) <mail@philipnewborough.co.uk>
#
# Modified by damo for BunsenLabs Linux
# ---------------------------------------------------------------------

BL_COMMON_LIBDIR='/usr/lib/bunsen/bunsen-common'

# In order to add another APP, add the package name to this array:
PLAYERS=( 'deadbeef' 'vlc' 'smplayer2' 'stuff' '' '')
TOOLS=('mhwaveedit' 'openshot')
UTILS=('volti' 'xfburn')


# If the package needs additional configuration before installation
# create a function called setupappName, it will be called automatically.


if ! . "$BL_COMMON_LIBDIR/bl-include.cfg" 2> /dev/null; then
	echo $"Error: Failed to locate bl-include.cfg in $BL_COMMON_LIBDIR" >&2
	exit 1
fi

appExists() {
	for curPlayer in "${PLAYERS[@]}"; do # if $packageName exists in players array
		[[ $curPlayer = "$1" ]] &&
			return 0
	done
	say "Unable to install $1. There is no such application that I know of." 1 >&2
	say "You can try one of these: ${PLAYERS[*]}" 2 >&2
	sleep 5s
	return 1
}

toolExists() {
	for curTool in "${TOOLS[@]}"; do # if $packageName exists in tools array
		[[ $curTool = "$1" ]] &&
			return 0
	done
	say "Unable to install $1. There is no such application that I know of." 1 >&2
	say "You can try one of these: ${TOOLS[*]}" 2 >&2
	return 1
}

utilExists() {
	for curUtil in "${UTILS[@]}"; do # if $packageName exists in utils array
		[[ $curUtil = "$1" ]] &&
			return 0
	done
	say "Unable to install $1. There is no such application that I know of." 1 >&2
	say "You can try one of these: ${UTILS[*]}" 2 >&2
	return 1
}

checkName() {	# set text to display in Menu
	case "$1" in
		"deadbeef"		) echo "DeaDBeef music player" ;;
		"smplayer2"		) echo "Gnome Mplayer" ;;
		"vlc"			) echo "VLC multimedia player";;
		"mhwaveedit"	) echo "Sound editor" ;;
		"openshot"		) echo "Openshot video editor" ;;
		"volti"			) echo "Volti mixer" ;;
		*				) echo "$1";;
	esac
}
if [[ $1 && ! $1 = --install-* ]]; then
	packageName=${1#--}
	read -ra words <<< "${packageName//-/ }"
	x-terminal-emulator --title "Install ${words[*]^}" -e "$0" "--install-$packageName"

elif [[ $1 = --install-* ]]; then
	packageName=${1#--install-}
	# check if package is from Tools array
	if [[ $1 = --install-mhwaveedit ]] || [[ $1 = --install-openshot ]];then
		toolExists "$packageName" || exit 1
	# check if package is from Utilities array
	elif [[ $1 = --install-volti ]] || [[ $1 = --install-xfburn ]];then
		utilExists "$packageName" || exit 1
	else
		appExists "$packageName" || exit 1
	fi

	appName=${packageName//-/ }
	read -ra words <<< "$appName"
	appName=${words[*]^}
	appNameUpper=${appName^^}

	setupFunctionName="setup${appName//[^a-zA-Z]/}" # setupFunctionName should now be in format like 'setupBlender'
	if [[ $(type -t "$setupFunctionName") = 'function' ]]; then
		promptInstall --setup "$setupFunctionName" "${appNameUpper% APP} APP" "$appName" "$packageName"
	else
		promptInstall "${appNameUpper% APP} APP" "$appName" "$packageName"
	fi

else # pipemenu
	menuStart
	for curPlayer in "${PLAYERS[@]}"; do
		read -ra words <<< "${curPlayer//-/ }"
		curPlayerName=$(checkName "$curPlayer")
		if type "$curPlayer" &> /dev/null; then
			menuItem "$curPlayerName" "$curPlayer"
		else
			menuItem "Install $curPlayerName" "$0 --$curPlayer"
		fi
	done
	menuSeparator 'Editors'

	for curTool in "${TOOLS[@]}"; do
		read -ra words <<< "${curTool//-/ }"
		curToolName=$(checkName "$curTool")
		if type "$curTool" &> /dev/null; then
			menuItem "$curToolName" "$curTool"
		else
			menuItem "Install $curToolName" "$0 --$curTool"
		fi
	done
	menuSeparator 'Utilities'
	for curUtil in "${UTILS[@]}"; do
		read -ra words <<< "${curUtil//-/ }"
		curUtilName=$(checkName "$curUtil")
		if type "$curUtil" &> /dev/null; then
			if [[ "$curUtil" = "volti" ]] ; then
				# volti mixer command is "volti-mixer"
				menuItem "$curUtilName" "$curUtil-mixer"
			else
				menuItem "$curUtilName" "$curUtil"
			fi
		else
			menuItem "Install $curUtilName" "$0 --$curUtil"
		fi
	done
	menuEnd
fi
exit 0
