#!/bin/bash
# ---------------------------------------------------------------------
# An Openbox pipemenu for Multimedia applications.
#
# Originally written for CrunchBang Linux <http://crunchbang.org/>
# by Philip Newborough (aka corenominal) <mail@philipnewborough.co.uk>
#
# Modified by damo <damo@bunsenlabs.org> for BunsenLabs Linux   April 2015
#
#   To change the entries shown in the Multimedia pipemenu:
#   edit ".config/openbox/pipemenus.rc"
#
# ---------------------------------------------------------------------

BL_COMMON_LIBDIR='/usr/lib/bunsen/bunsen-common'
USR_CFG_DIR="$HOME/.config/openbox"

# If the package needs additional configuration before installation
# create a function called setupappName, it will be called automatically.

if ! . "$BL_COMMON_LIBDIR/bl-include.cfg" 2> /dev/null; then
    echo $"Error: Failed to locate bl-include.cfg in $BL_COMMON_LIBDIR" >&2
    exit 1
elif ! . "$USR_CFG_DIR/pipemenus.rc" 2> /dev/null; then
    echo $"Error: Failed to locate pipemenus.rc in $USR_CFG_DIR" >&2
    exit 1
fi

declare -A AppName AppStatus # AppName: split on hyphens, first letter uppercase
for curApp in "${MM_APPS[@]}" "${MM_EDITORS[@]}" "${MM_UTILS[@]}"; do
    words=(${curApp//-/ })
    AppName[$curApp]="${words[*]^}"
    type "$curApp" >/dev/null 2>&1 && AppStatus[$curApp]=installed
done

appExists() {
    for curApp in "${!AppName[@]}"; do # if $packageName exists in MM_APPS MM_EDITORS MM_UTILS arrays
        [[ $curApp = "$1" ]] &&
            return 0
    done
    say "Unable to install $1. There is no such application that I know of." 1 >&2
    say "You can try one of these: ${MM_APPS[*]} ${MM_EDITORS[*]} ${MM_UTILS[*]}" 2 >&2
    return 1
}

if [[ $1 = --install ]]; then
    packageName=$2
    appName=${AppName[$packageName]}
    appExists "$packageName" || exit 1

    terminalCheck -T "Install $appName" "$@"

    desc="This script will install $appName."
    setupFunctionName="setup${appName//[^a-zA-Z]/}" # setupFunctionName should now be in format like 'setupChromium'
    if [[ $(type -t "$setupFunctionName") = 'function' ]]; then
        promptInstall --setup "$setupFunctionName" "$appName" "$desc" "$packageName"
    else
        promptInstall "$appName" "$desc" "$packageName"
    fi

elif [[ $1 ]]; then
    echo "$0: no such option $*" >&2
    exit 1

else # pipemenu
    menuStart

    for curApp in "${MM_APPS[@]}"; do
        if [[ ${AppStatus[$curApp]} = installed ]]; then
            if [[ "$curApp" = "mpv" ]];then # notify user that mpv is a cli application
                menuItem "mpv (cli)" "notify-send -t 3000 'mpv is a commandline application'"
            else
                menuItem "${AppName[$curApp]}" "$curApp"
            fi
        fi
    done
    menu_started=false
    for curApp in "${MM_APPS[@]}"; do
        if ! [[ ${AppStatus[$curApp]} = installed ]]; then
            $menu_started || menuSubmenu "mm-apps-install-submenu" "Install"
            menu_started=true
            menuItem "Install ${AppName[$curApp]}" "$0 --install $curApp"
        fi
    done
    $menu_started && menuSubmenuEnd

    menuSeparator
    menuSeparator 'Editors'
    for curApp in "${MM_EDITORS[@]}"; do
        if [[ ${AppStatus[$curApp]} = installed ]]; then
            menuItem "${AppName[$curApp]}" "$curApp"
        fi
    done
    menu_started=false
    for curApp in "${MM_EDITORS[@]}"; do
        if ! [[ ${AppStatus[$curApp]} = installed ]]; then
            $menu_started || menuSubmenu "mm-editors-install-submenu" "Install"
            menu_started=true
            menuItem "Install ${AppName[$curApp]}" "$0 --install $curApp"
        fi
    done
    $menu_started && menuSubmenuEnd

    menuSeparator
    menuSeparator 'Utilities'
    for curApp in "${MM_UTILS[@]}"; do
        if [[ ${AppStatus[$curApp]} = installed ]]; then
            menuItem "${AppName[$curApp]}" "$curApp"
        fi
    done
    menu_started=false
    for curApp in "${MM_UTILS[@]}"; do
        if ! [[ ${AppStatus[$curApp]} = installed ]]; then
            $menu_started || menuSubmenu "mm-utils-install-submenu" "Install"
            menu_started=true
            menuItem "Install ${AppName[$curApp]}" "$0 --install $curApp"
        fi
    done
    $menu_started && menuSubmenuEnd

    menuEnd
fi
exit 0
