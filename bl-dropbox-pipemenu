#!/bin/bash
# --------------------------------------------------------------------
# An Openbox pipemenu for use with Dropbox and Bunsen Labs Linux.
# Originally written for CrunchBang Linux <http://crunchbanglinux.org/>
# by Philip Newborough (aka corenominal) <mail@philipnewborough.co.uk>
# Rewritten by Aleks-Daniel Jakimenko in 2013 and
# John Crawley <john@rafflesnagoya.com> in 2015 to use dropbox.py.
# --------------------------------------------------------------------

# Directory to install the dropbox cli interface, dropbox.py.
# If dropbox.py is in user's $PATH they can use that command
# to control dropbox. Otherwise, the absolute path /path/to/dropbox.py
USER_DBPY_DIR="$HOME/bin"
USER_DBPY="$USER_DBPY_DIR/dropbox.py"

USERDBDIR="$HOME/.dropbox-dist/"

BL_COMMON_LIBDIR='/usr/lib/bunsen/bunsen-common'

PROMPT_DELAY_TEXT='It is a good idea to add a delay before autostarting Dropbox
so that your system can establish a working network connection.

Select the number of seconds to delay Dropbox autostarting.
Click "Cancel" if you do not want to add a delay.'
PROMPT_DELAY_VARIANTS=(FALSE 10 FALSE 20 FALSE 30 FALSE 40 FALSE 50 TRUE 60)

if ! . "$BL_COMMON_LIBDIR/bl-include.cfg" 2> /dev/null; then
    echo $"Error: Failed to locate bl-include.cfg in $BL_COMMON_LIBDIR" >&2
    exit 1
fi

dropbox_is_installed() {
    [[ -x "$USERDBDIR/dropboxd" ]] || return 1
    return 0
}

get_dropbox.py() {
    [[ -e "$USER_DBPY" ]] && {
        if [[ -x "$USER_DBPY" ]]; then
            return 0
        else
            { echo "$0: $USER_DBPY exists but is not executable." >&2; return 1;}
        fi
    }
    mkdir -p "$USER_DBPY_DIR"
    notify-send -i dialog-information 'Dropbox Installation' 'Fetching Dropbox frontend dropbox.py...'
    wget -O "$USER_DBPY" 'https://www.dropbox.com/download?dl=packages/dropbox.py' || { echo "$0: dropbox.py download failed." >&2; return 1;}
    [[ -f "$USER_DBPY" ]] || { echo "$0: $USER_DBPY does not exist." >&2; return 1;}
    chmod 755 "$USER_DBPY" || { echo "$0: failed to set permissions on $USER_DBPY" >&2; return 1;}
    return 0
}

# --------------------------------------------------------------------
# manipulation
# --------------------------------------------------------------------

if [[ $1 = '--start-dropbox' ]]; then
    "$USER_DBPY" start

elif [[ $1 = '--stop-dropbox' ]]; then
    "$USER_DBPY" stop

elif [[ $1 = '--install-dropbox' ]]; then
    zenity --question --title='Dropbox Installation' --text='This script will install Dropbox.\nDo you want to proceed?' || exit 0

    # use dropbox.py to install dropbox
    [[ -x "$USER_DBPY" ]] || {
        get_dropbox.py || {
            echo "$0: failed to fetch dropbox.py" >&2
            notify-send -i dialog-error 'Dropbox Installation' 'Failed to fetch dropbox.py'
            exit 1
        }
    }
    [[ $(dpkg-query --show --showformat='${db:Status-Abbrev}' python-gpgme) = 'ii' ]] || {
        zenity --question --title='Dropbox Installation' --text='We need to install the package python-gpgme (~125k)\nDo you want to proceed?' || exit 0
        gksu 'apt-get install -y python-gpgme' || {
            zenity --error --title='Dropbox Installation' --text="Failed to install python-gpgme."
            exit 1
        }
    }
    "$USER_DBPY" start -i
    dropbox_is_installed || {
        zenity --error --title='Dropbox Installation' --text="Dropbox installation failed."
        exit 1
    }
    notify-send -i dialog-information 'Dropbox Installation' 'Dropbox has been installed.'
    zenity --info --title='Dropbox Installation' --text="Dropbox CLI frontend dropbox.py has been installed in $USER_DBPY_DIR.
Run '$USER_DBPY help' to view options.
(If $USER_DBPY_DIR is in your PATH, then the path $USER_DBPY_DIR can be omitted.)"

    zenity --question --title='Dropbox Installation' --text='Dropbox can be started automatically when you start your session. Would you like to autostart Dropbox when you login?'
    if [[ $? = 0 ]]; then # add to autostart
        ans=$(zenity  --title='Dropbox Installation' --list --text="$PROMPT_DELAY_TEXT" --radiolist  --column 'Pick' --column 'Seconds:' "${PROMPT_DELAY_VARIANTS[@]}")
        if [[ $? = 0 ]]; then
            cat <<DRBX >> "$HOME/.config/openbox/autostart"

# Autostart the Dropbox daemon
(sleep ${ans}s; $USER_DBPY start) &

DRBX
        fi
    fi
    zenity --question --title='Dropbox Installation' --text='Do you wish to start the Dropbox client now?' || exit 0
    "$USER_DBPY" start

else
    # pipemenu stuff
    menuStart
    if ! dropbox_is_installed; then
        menuItem 'Install Dropbox' "$0 --install-dropbox"
        menuSeparator
        menuItem 'Find out more about Dropbox' 'x-www-browser http://db.tt/5mJg9lb'
    else
        [[ -d $HOME/Dropbox ]] &&
            menuItem 'Open Dropbox Folder' 'bl-file-manager $HOME/Dropbox'

        if ! pidof dropbox > /dev/null; then
            menuItem 'Start Dropbox' "$0 --start-dropbox"
        else
            menuItem 'Stop Dropbox' "$0 --stop-dropbox"
        fi
        menuSeparator
        menuItem 'Launch Dropbox Website' 'x-www-browser https://www.dropbox.com/home'
    fi
    menuItem 'Dropbox Terms' 'x-www-browser https://www.dropbox.com/terms'
    menuEnd
fi
exit 0
