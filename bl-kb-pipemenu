#!/bin/bash
# ---------------------------------------------------------------------
# An Openbox pipemenu for displaying keybinds.
# obkb-pipemenu.py is used to parse rc.xml and send the output to a textfile
#
# Written by <damo> for BunsenLabs Linux,  April 2015
# ---------------------------------------------------------------------
#
# NB The keybinds in the menu are just for display - clicking on an item
# just closes the menu on screen
#
#-----------------------------------------------------------------------
BL_COMMON_LIBDIR="/usr/lib/bunsen/bunsen-common"
KBSCRIPT="obkb-pipemenu.py"
RCPATH=".config/openbox/rc.xml"
KBTEXT=".config/openbox/kbinds.txt"

if ! . "$BL_COMMON_LIBDIR/bl-include.cfg" 2> /dev/null; then
	echo $"Error: Failed to locate bl-include.cfg in $BL_COMMON_LIBDIR" >&2
	exit 1
fi

if ! [ -e "$KBTEXT" ];then # write keybinds to textfile, if it doesn't exist
	# test if obkb-pipemenu.py exists in path
	if type "$KBSCRIPT" &> /dev/null;then
		# run script to write kbinds.txt
		"$KBSCRIPT"
	else
		echo $"ERROR: obkb-pipemenu.py not found" >&2
		exit 1
	fi
fi

if [[ $1 = '--rcedit' ]];then # "Backup & Edit rc.xml" is chosen in menu
	# backup rc.xml first
	NOW=$(date +"%Y%m%d-%H%M")
	RCBKP="$RCPATH.$NOW"
	cp "$RCPATH" "$RCBKP"
	geany "$RCPATH"		# open rc.xml in editor
#	<x-text-editor> "$RCPATH"
fi

# pipemenu
menuStart
menuItem "Backup and Edit rc.xml" "bl-kb-pipemenu --rcedit"
menuSeparator

# read in lines from textfile, write menu entries
while read -r a b;do
	curItem=$(printf "%-20s %s" "$a" "$b")
	menuItem "$curItem" "echo >/dev/null 2>&1" #<command> closes menu on screen
done < "$KBTEXT"

menuEnd

exit 0
