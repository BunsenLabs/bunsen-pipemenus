#!/bin/bash
#    bl-scrot-pipemenu - a jgmenupipemenu for screenshots
#    Copyright (C) 2012 Philip Newborough   <corenominal@corenominal.org>
#    Copyright (C) 2015-2016 damo    <damo@bunsenlabs.org>
#    Copyright (C) 2015-2019 John Crawley    <john@bunsenlabs.org>
#    Copyright (C) 2016 Jens John <dev@2ion.de>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

HELP='    bl-scrot-pipemenu a jgmenu Pipe Menu for taking screenshots
    It should normally be called from a jgmenu menu.

Options (usually passed from the menu):
    -h --help   show this message

    If bl-scrot-pipemenu is called with no options (the usual method),
    it will output a csv jgmenu pipemenu for taking screenshots.

'

# apps list
GRAPHICS_SCROTS=('xfce4-screenshooter' 'scrot' )

# associative array: add any commands which are different from package names
declare -A pkg_cmd
pkg_cmd=()
########################################################################

# look for a help option somewhere
for i in "$@"
do
    case "$i" in
    -h|--help)
        echo "$HELP"
        exit 0
        ;;
    esac
done

#BL_COMMON_LIBDIR='/usr/lib/bunsen/common'
BL_COMMON_LIBDIR='/home/john/git/bunsen/bunsen-common'

if ! . "$BL_COMMON_LIBDIR/bl-includes" 2> /dev/null; then
    echo $"Error: Failed to source bl-includes in $BL_COMMON_LIBDIR" >&2
    exit 1
fi

# Get $USER images directory
if type xdg-user-dir &>/dev/null; then
    IMGDIR=$(xdg-user-dir PICTURES)
else
    IMGDIR="$HOME/Pictures"
fi
# test for screenshots dir, create if it doesn't exist
SCROTSDIR="$IMGDIR/screenshots"
mkdir -p "$SCROTSDIR"

declare -A AppName AppStatus AppCmd

for curApp in "${GRAPHICS_SCROTS[@]}"; do
    words=(${curApp//-/ })
    AppName[$curApp]="${AppName[$curApp]:-${words[*]^}}"
    AppCmd[$curApp]="${pkg_cmd[$curApp]:-$curApp}" # use packagename as command if not defined in pkg_cmd
    hash "${AppCmd[$curApp]}" 2>/dev/null && AppStatus[$curApp]='installed' || AppStatus[$curApp]=''
done

writeScrot() {                  # Write scrot submenu items
    IMG="$SCROTSDIR/%F-%H-%M-%S_scrot.png"
    VIEW="'bl-image-viewer $IMG'"
    jgmenuSubmenu 'root' 'takescrot' 'scrot Screenshooter'
        jgmenuItem 'takescrot' "scrot Now" "scrot $IMG -e $VIEW"
        jgmenuItem 'takescrot' "scrot In 5 secs..." "scrot -d 5 $IMG -e $VIEW"
        jgmenuItem 'takescrot' "scrot In 10 secs..." "scrot -d 10 $IMG -e $VIEW"
        jgmenuItem 'takescrot' "scrot Select Area" "scrot -s $IMG -e $VIEW"
        jgmenuItem 'takescrot' "scrot Current Focus" "scrot -u $IMG -e $VIEW"
        jgmenuItem 'takescrot' "scrot Multi-Monitor" "scrot -m $IMG -e $VIEW"
}

# pipemenu
for curScrot in "${GRAPHICS_SCROTS[@]}"; do
    if [[ ${AppStatus[$curScrot]} = installed ]]; then
        if [[ "$curScrot" = scrot ]];then
            writeScrot
        else
            jgmenuItem 'root' "${AppName[$curScrot]}" "${AppCmd[$curScrot]}"
        fi
    fi
done

jgmenuEnd

exit 0
