#!/bin/bash
#    bl-beepmein-pipemenu - a beepmein pipe menu for jgmenu
#    Copyright (C) 2020 brontosaurusrex
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

HELP="    bl-beepmein-pipemenu a beepmein pipe menu for jgmenu

Usage: (standalone) bl-beepmein-pipemenu | jgmenu --vsimple --at-pointer
        (or use --standalone option)

    It can be called from a tint2 button, launcher or jgmenu menu.

Options:
    -h --help
        show this message

    -s --standalone
        call jgmenu directly

    If bl-beepmein-pipemenu is called with no options,
    it will output a jgmenu pipemenu for using the beepmein alarm clock.

    The standalone option can be used to start the menu from a launcher
    like a tint2 button instead of incorporating it in a menu.

Example:
    To launch from the tint2 clock right-click action:
clock_rclick_command = beepmein-pipemenu --standalone

See also:
    beepmein(1)
"
# look for a help option somewhere
for i in "$@"
do
    case "$i" in
    -h|--help)
        echo "$HELP"
        exit 0
        ;;
    -s|--standalone)
        # redirect stdout from this point
        exec > >( jgmenu --simple --config-file=<( sed '/menu_padding_top/ { s/^/#/ }; $ a tabs = 0' ~/.config/jgmenu/jgmenurc ) )
        ;;
    esac
done

# required
command -v at >/dev/null 2>&1 || { >&2 echo "I need at: sudo apt install --no-install-recommends at" ; exit 1; }
command -v gmrun >/dev/null 2>&1 || { >&2 echo "I need gmrun." ; exit 1; }
command -v yad >/dev/null 2>&1 || { >&2 echo "I need yad." ; exit 1; }

# for display purposes
future="$(date -d "+5 minutes" +%R)"

# start to display jgmenu
echo "Beepmein Alarm Clock (Time is now: $(date +%R)),x-terminal-emulator -T beepmein -e bash -c 'beepmein -h; echo \"Press any key to close\"; read -srn1' "

# for timeToEvent()
now="$(date +%s)"

# timeToEvent
timeToEvent() {
    # job Event time
    event="$1"
    if [[ "$event" ]]; then

        event="$(date -d "$event" +%s)"
        diff=$(( event - now ))

        # And show as HH:MM:SS, only if less than 24 hours
        # 24 hours is 86400 seconds
        if (( diff < 86400 )); then
            date -u -d @${diff} +%T
        fi
    fi
}

# action
echo "＋ Reminder in 1 min., beepmein --nr 1"
echo "＋ Reminder in 5 min., beepmein --nr 5"
echo "＋ Reminder in 15 min (edit), gmrun 'beepmein 15'"
echo "＋ Reminder @ $future (edit), gmrun 'beepmein $future'"
echo "＋ Alarm @ $future (edit), gmrun 'beepmein $future --alarm'"
echo "＋ Alarm @ morning (edit), gmrun 'beepmein 7:00 --alarm'"
echo "◼  Stop all playback, killall beepmein"
echo "Set sounds,^checkout(Set sounds:)"

lines="$(atq | wc -l)"
if (( lines > 0 )) ; then

    echo "^sep(Click to remove from queue:)"

    # This is the actual line by line loop
    atq | sort -r | while read -r job nameday month day clock year queue _ ; do

        # get diff
        toEvent="$(timeToEvent "$nameday $month $day $clock $year")"
        [[ "$toEvent" ]] && toEvent="\t&lt; $toEvent"

        echo -n "✕ $clock ($month-$day)"
        if [[ $queue == "=" ]]; then
            echo -ne "\t now"
        else
            echo -ne "$toEvent"
        fi
        echo ", atrm $job"

    done

fi

echo "^tag(Set sounds:)"
echo "Set Alarm sound, beepmein --set-alarm"
echo "▶  Alarm test, beepmein --reaction --alarm alarm"
echo "Set Reminder sound, beepmein --set-remind"
echo "▶  Reminder test, beepmein --reaction reminder"
